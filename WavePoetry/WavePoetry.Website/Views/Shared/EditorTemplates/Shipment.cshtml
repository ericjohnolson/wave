@model WavePoetry.Model.Shipment


<div class="tabbable">

    <fieldset>
        <legend></legend>
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.Redirect)
        
        <div class="editor-label">
            @Html.DisplayNameFor(model => model.ShouldFollowUp)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ShouldFollowUp)
            @Html.ValidationMessageFor(model => model.ShouldFollowUp)
        </div>

        <div class="editor-label">
            @Html.DisplayNameFor(model => model.TitleName)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.TitleName)
            @Html.ValidationMessageFor(model => model.TitleName)
        </div>
        @Html.HiddenFor(model => model.TitleId)

        <div class="editor-label">
            @Html.DisplayNameFor(model => model.ContactName)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ContactName)
            @Html.ValidationMessageFor(model => model.ContactName)
        </div>
        @Html.HiddenFor(model => model.ContactId)
        
        <div class="editor-label">
            @Html.DisplayNameFor(model => model.Type)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.Type, Model.Types, new { @class = "test" })
            @Html.ValidationMessageFor(model => model.Type)
        </div>

        <div class="editor-label">
            @Html.DisplayNameFor(model => model.Status)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.Status, Model.StatusTypes, new { @class = "test" })
            @Html.ValidationMessageFor(model => model.Status)
        </div>

        <div class="editor-label">
            @Html.DisplayNameFor(model => model.Quantity)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Quantity)
            @Html.ValidationMessageFor(model => model.Quantity)
        </div>
        
        <div class="editor-label">
            @Html.DisplayNameFor(model => model.DateSent)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.DateSent)
            @Html.ValidationMessageFor(model => model.DateSent)
        </div>
                
        <div class="form-actions">
            <div class=" pull-right">
                <a href="/Review/Search/" class="btn">Back to Review List</a>
                <button class="btn btn-primary" name="cmdSave" type="submit">Save</button>
            </div>
        </div>
    </fieldset>

</div>

<script>

    $(document).ready(function () {
        // Init items
        $('#DateSent').datepicker();

        $("#ContactName")
        // don't navigate away from the field on tab when selecting an item
        .bind("keydown", function (event) {
            if (event.keyCode === $.ui.keyCode.TAB &&
            $(this).data("autocomplete").menu.active) {
                event.preventDefault();
            }
        })
        .autocomplete({
            minLength: 1,
            source: function (request, response) {
                $.ajax({
                    url: "/Contact/LookupAuthor", type: "POST", dataType: "json",
                    data: { searchText: request.term, maxResults: 10 },
                    success: function (data) {
                        response($.map(data, function (item) {
                            return { label: item.DisplayName, id: item.Id }
                        }))
                    }
                })
            },
            focus: function () {
                // prevent value inserted on focus
                return false;
            },
            select: function (event, ui) {
                $("#ContactId").val(ui.item.id);
            }
        });

        $("#TitleName")
        // don't navigate away from the field on tab when selecting an item
        .bind("keydown", function (event) {
            if (event.keyCode === $.ui.keyCode.TAB &&
            $(this).data("autocomplete").menu.active) {
                event.preventDefault();
            }
        })
        .autocomplete({
            minLength: 1,
            source: function (request, response) {
                $.ajax({
                    url: "/Title/LookupTitle", type: "POST", dataType: "json",
                    data: { searchText: request.term, maxResults: 10 },
                    success: function (data) {
                        response($.map(data, function (item) {
                            return { label: item.Title, id: item.TitleId }
                        }))
                    }
                })
            },
            focus: function () {
                // prevent value inserted on focus
                return false;
            },
            select: function (event, ui) {
                $("#TitleId").val(ui.item.id);
            }
        });

    });

</script>
