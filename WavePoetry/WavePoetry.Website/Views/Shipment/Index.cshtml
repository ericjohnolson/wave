@model WavePoetry.Model.ShipmentSearch

@{
    ViewBag.Title = "Shipments";
}

<h2>Shipments</h2>
<div class="box">
    <div class="accordion-heading">
        <span class="accordion-toggle">Search Options
        <a class="pull-right" data-toggle="collapse" href="#collapseOne"><i class="icon-chevron-up"></i><i class="icon-chevron-down"></i></a>
        </span>
    </div>
    <div id="collapseOne" class="accordion-body collapse in">
        <div class="accordion-inner">
            
        @using (Html.BeginForm("Index", "Shipment", FormMethod.Post, new { @class = "ts" }))
        {
            <fieldset>
                <div class="row">
                    <div class="span4">

                        <div class="editor-label">
                            Titles
                        </div>
                        <div class="editor-field">
                            @Html.ListBoxFor(model => model.SelectedTitles, Model.AvailableTitles, new { @class = "chzn-select" })
                        </div>
                    </div>
                    <div class="span5">

                        <div class="editor-label">
                            Marking Type
                        </div>
                        <div class="editor-field">
                            @Html.DropDownListFor(model => model.SelectedType, Model.Types, new { @class = "tst" })
                        </div>
                    </div>
                </div>
                <hr />
                <div class="pull-right">
                    
                     <input class="btn" type="submit"  name="btnValue", value="Find Marked Contacts" />
                     <input class="btn btn-primary" type="submit" name="btnValue", value="Find Pending Shipments" />
                </div>
            </fieldset>
        }
        </div>
    </div>
</div>
<hr />

@if (Model.ResultsToMarkSent != null && Model.ResultsToMarkSent.Count() > 0)
{

    
    <h3>Pending Shipments</h3>
    <div class="well">
        @using (Html.BeginForm("CreateCsv", "Shipment", FormMethod.Post, new { @class = "form-inline" }))
        {
            <button type="submit" class="btn btn-inverse">Export CSV</button>
        }
        @using (Html.BeginForm("MarkSent", "Shipment", FormMethod.Post, new { @class = "form-inline" }))
        {
            <button type="submit" class="btn btn-danger">Mark Shipments Sent</button>
        }
    </div>
    <table cellpadding="0" cellspacing="0" border="0" class="table table-striped table-bordered table-condensed" id="sentTable" style="font-size: 0.8em;">
        <thead>
            <tr>
                <td>Contact</td>
                <td>Organization</td>
                <td>City</td>
                <td>Titles</td>
            </tr>
        </thead>
        <tbody>
            @foreach (var result in Model.ResultsToMarkSent)
            {
                <tr>
                    <td><a href="/Contact/Edit/@result.ContactId" >@result.SortName</a></td>
                    <td>@result.Organization</td>
                    <td>@result.City</td>
                    <td>
                        @foreach (var title in result.Titles)
                        {
                            <span>@title.TitleName (@title.Quantity),</span> 
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@if (Model.ResultsToMarkPending != null && Model.ResultsToMarkPending.Count() > 0)
{
    <h3>Marked Contacts</h3>
    using (Html.BeginForm("CreatePending", "Shipment", FormMethod.Post, new { @class = "form-inline" }))
    {
    <div class="well">
        <button type="submit" class="btn btn-danger">Create Pending Shipments</button>
    </div>
    }
            
    <table cellpadding="0" cellspacing="0" border="0" class="table table-striped table-bordered table-condensed" id="pendingTable" style="font-size: 0.8em;">
        <thead>
            <tr>
                <td>Contact</td>
                <td>Organization</td>
                <td>City</td>
                <td>Titles</td>
            </tr>
        </thead>
        <tbody>
            @foreach (var result in Model.ResultsToMarkPending)
            {
                <tr>
                    <td><a href="/Contact/Edit/@result.ContactId" >@result.SortName</a></td>
                    <td>@result.Organization</td>
                    <td>@result.City</td>
                    <td>
                        @foreach (var title in result.Titles)
                        {
                            <span>@title.TitleName (@title.Quantity),</span> 
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

<p>
    @Model.Message
</p>

<style>
    .box {
        background: none repeat scroll 0 0 #FBFBFB;
        border: 1px solid #CDCDCD;
        border-radius: 3px 3px 3px 3px;
        box-shadow: 0 2px 2px -2px #CCCCCC;
        margin-bottom: 20px;
    }

    .accordion-heading {
        border-bottom: 1px solid #CDCDCD;
        color: #636363;
        font-weight: 600;
        text-shadow: 0 1px white;
    }

    .accordion-inner {
        padding-bottom: 0px;
    }
</style>

<script src="@Url.Content("~/Scripts/chosen/chosen.jquery.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/chosen/ajax-chosen.min.js")" type="text/javascript"></script>
<link href="@Url.Content("~/Scripts/chosen/chosen.css")" rel="stylesheet"  type="text/css" />
<script>
    $(document).ready(function () {
        $(".chzn-select").ajaxChosen({
            type: 'GET',
            url: '/Title/LookupTitle',
            dataType: 'json'
        }, function (data) {
            var results = [];

            $.each(data, function (i, val) {
                results.push({ value: val.TitleId, text: val.Title });
            });

            return results;
        });
        //$('.chzn-choices input').autocomplete({
        //    source: function (request, response) {
        //        $.ajax({
        //            url: "/Title/LookupTitle", type: "POST", dataType: "json",
        //            data: { searchText: request.term, maxResults: 10 },
        //            beforeSend: function () { $('ul.chzn-results').empty(); },
        //            success: function (data) {
        //                response($.map(data, function (item) {
        //                  $('ul.chzn-results').append('<li class="active-result" id="' + item.TitleId + '">' + item.Title + '</li>');
        //                }));
        //            }
        //        })
        //    }
        //});

        $('#pendingTable').dataTable({
            "aoColumns": [
                null,
                null,
                null,
                null
            ],
            "sDom": "<'row'<'span6'l><'span6'f>r>t<'row'<'span6'i><'span6'p>>",
            "sPaginationType": "bootstrap",
            "oLanguage": {
                "sLengthMenu": "_MENU_ records per page"
            },
            "aaSorting": [[0, 'asc']],
            "iDisplayLength": 25,
        });
        $('#sentTable').dataTable({
            "aoColumns": [
                null,
                null,
                null,
                null
            ],
            "sDom": "<'row'<'span6'l><'span6'f>r>t<'row'<'span6'i><'span6'p>>",
            "sPaginationType": "bootstrap",
            "oLanguage": {
                "sLengthMenu": "_MENU_ records per page"
            },
            "aaSorting": [[0, 'asc']],
            "iDisplayLength": 25,
        });
    });
</script>



